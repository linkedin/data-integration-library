// Copyright 2021 LinkedIn Corporation. All rights reserved.
// Licensed under the BSD-2 Clause license.
// See LICENSE in the project root for license information.

buildscript {
  ext.avroVersion = '1.9.2'
  ext.awsVersion = '2.10.15'
  ext.findBugsVersion = '3.0.0'
  ext.gobblinVersion = '0.17.0-dev-303'
  ext.hadoopVersion = '2.3.0'
  ext.hiveVersion = '1.0.1'
  ext.javaVersion = JavaVersion.VERSION_1_8
  ext.junitJupiterVersion = '5.6.1'
  ext.log4jVersion = '1.2.17'
  ext.pegasusVersion = '28.3.7'
  ext.slf4jVersion = '1.7.21'

  apply from: 'gradle/scripts/repositories.gradle'
  buildscript.repositories.addAll(project.repositories)

  dependencies {
    classpath 'org.apache.ant:ant:1.9.4'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:1.0.2'
    classpath 'me.champeau.gradle:jmh-gradle-plugin:0.4.8'
    classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:latest.release'
    classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    classpath "org.shipkit:shipkit-auto-version:latest.release"
    classpath "org.shipkit:shipkit-changelog:latest.release"
  }
}

apply from: 'gradle/scripts/dependencyDefinitions.gradle'
apply from: 'gradle/scripts/configureSubprojects.gradle'
apply from: 'gradle/scripts/jacoco-coveralls-support.gradle'
apply from: 'gradle/scripts/testSetup.gradle'
apply from: "gradle/release.gradle"

allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  apply plugin: 'checkstyle'
}

subprojects {
  dependencies {
  }
  project.buildDir = new File(project.rootProject.buildDir, project.name)
}

subprojects { sp ->
  apply plugin: 'maven'

  plugins.withType(JavaPlugin) {
    dependencies {
      testCompile externalDependency.testng
    }

    tasks.withType(Test) {
      useTestNG()
    }

    checkstyle {
      configDirectory = file("${project.rootDir}/gradle/checkstyle")
      sourceSets = [ getProject().sourceSets.main, getProject().sourceSets.test ]
      toolVersion = "8.35"
      maxWarnings = 0
      ignoreFailures = false
    }
    checkstyleMain.source = ["src/main/java", "src/test/java"]
  }

  afterEvaluate {
    if (project.plugins.hasPlugin('java')) {
      sourceCompatibility = 1.8
      targetCompatibility = 1.8
    }
  }

  afterEvaluate {
    if (project.plugins.hasPlugin('pegasus')) {
      dependencies {
        dataTemplateCompile spec.product.pegasus.data
        restClientCompile spec.product.pegasus.restliClient
      }
    }
  }
}

task printVersionName {
  doLast {
    println project.version
  }
}
